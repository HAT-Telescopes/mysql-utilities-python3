Test case 1 - export with default locking
# Source on localhost: ... connected.
SET FOREIGN_KEY_CHECKS=0;
# Exporting metadata from `util_test`
DROP DATABASE IF EXISTS `util_test`;
CREATE DATABASE `util_test`;
USE `util_test`;
# TABLE: `util_test`.`t1`
CREATE TABLE `t1` (
  `a` char(30) DEFAULT NULL
# #if (server1 != 'MySQL') or (int(version1) < 80000)
) ENGINE=MEMORY DEFAULT CHARSET=latin1;
# #else
) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
# #endif
# TABLE: `util_test`.`t2`
CREATE TABLE `t2` (
  `a` char(30) DEFAULT NULL
# #if (server1 != 'MySQL') or (int(version1) < 80000)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
# #else
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
# #endif  
# TABLE: `util_test`.`t3`
CREATE TABLE `t3` (
# #if (server1 != 'MySQL') or (int(version1) < 80000)
  `a` int(11) NOT NULL AUTO_INCREMENT,
  `b` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`a`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;
# #else
  `a` int NOT NULL AUTO_INCREMENT,
  `b` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`a`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
# #endif
# TABLE: `util_test`.`t4`
CREATE TABLE `t4` (
# #if (server1 != 'MySQL') or (int(version1) < 80000)
  `c` int(11) NOT NULL,
  `d` int(11) NOT NULL,
  KEY `ref_t3` (`c`),
  CONSTRAINT `ref_t3` FOREIGN KEY (`c`) REFERENCES `t3` (`a`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
# #else
  `c` int NOT NULL,
  `d` int NOT NULL,
  KEY `ref_t3` (`c`),
  CONSTRAINT `ref_t3` FOREIGN KEY (`c`) REFERENCES `t3` (`a`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
# #endif
# TABLE: `util_test`.`t5`
CREATE TABLE `t5` (
# #if (server1 != 'MySQL') or (int(version1) < 80000)
  `product_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(20) DEFAULT NULL,
  `base_price` decimal(20,2) unsigned DEFAULT NULL,
  `tax_percentage` decimal(3,0) unsigned DEFAULT NULL,
  PRIMARY KEY (`product_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;
# #else
  `product_id` int unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(20) DEFAULT NULL,
  `base_price` decimal(20,2) unsigned DEFAULT NULL,
  `tax_percentage` decimal(3,0) unsigned DEFAULT NULL,
  PRIMARY KEY (`product_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
# #endif
# FUNCTION: `util_test`.`f1`
DELIMITER ||
# #if (server1 != 'MySQL') or (int(version1) < 80000)
CREATE DEFINER=`XXXX`@`XXXXXXXXX` FUNCTION `f1`() RETURNS int(11)
# #else
CREATE DEFINER=`XXXX`@`XXXXXXXXX` FUNCTION `f1`() RETURNS int
# #endif
    DETERMINISTIC
RETURN (SELECT 1);
||
DELIMITER ;
# FUNCTION: `util_test`.`f2`
DELIMITER ||
CREATE DEFINER=`XXXX`@`XXXXXXXXX` FUNCTION `f2`(base_price DECIMAL(20,2) UNSIGNED, tax_percentage DECIMAL(3,0) UNSIGNED) RETURNS decimal(21,2) unsigned
    DETERMINISTIC
RETURN base_price + base_price*(tax_percentage/100);
||
DELIMITER ;
# PROCEDURE: `util_test`.`p1`
DELIMITER ||
CREATE DEFINER=`XXXX`@`XXXXXXXXX` PROCEDURE `p1`(p1 CHAR(20))
INSERT INTO util_test.t1 VALUES ("50");
||
DELIMITER ;
# VIEW: `util_test`.`v1`
CREATE ALGORITHM=UNDEFINED DEFINER=`XXXX`@`XXXXXXXXX` SQL SECURITY DEFINER VIEW `v1` AS select `t1`.`a` AS `a` from `t1`;
# VIEW: `util_test`.`v2`
CREATE ALGORITHM=UNDEFINED DEFINER=`XXXX`@`XXXXXXXXX` SQL SECURITY DEFINER VIEW `v2` AS select `t5`.`name` AS `name`,`util_test`.`f2`(`t5`.`base_price`,`t5`.`tax_percentage`) AS `price` from `t5`;
# TRIGGER: `util_test`.`trg`
DELIMITER ||
# #if (server1 != 'MySQL') or (int(version1) < 80000)
CREATE DEFINER=`XXXX`@`XXXXXXXXX` TRIGGER util_test.trg AFTER INSERT ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t2 VALUES('Test objects count');
# #else
CREATE DEFINER=`XXXX`@`XXXXXXXXX` TRIGGER `trg` AFTER INSERT ON `t1` FOR EACH ROW INSERT INTO util_test.t2 VALUES('Test objects count');
# #endif
||
DELIMITER ;
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT ALTER ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT ALTER ROUTINE ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT CREATE ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT CREATE ROUTINE ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT CREATE TEMPORARY TABLES ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT CREATE VIEW ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT DELETE ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT DROP ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT EVENT ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT EXECUTE ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT INDEX ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT INSERT ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT LOCK TABLES ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT REFERENCES ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT SELECT ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT SHOW VIEW ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT TRIGGER ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe'@'user';
GRANT UPDATE ON `util_test`.* TO 'joe'@'user';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT ALTER ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT ALTER ROUTINE ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT CREATE ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT CREATE ROUTINE ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT CREATE TEMPORARY TABLES ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT CREATE VIEW ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT DELETE ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT DROP ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT EVENT ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT EXECUTE ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT INDEX ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT INSERT ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT LOCK TABLES ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT REFERENCES ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT SELECT ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT SHOW VIEW ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT TRIGGER ON `util_test`.* TO 'joe_wildcard'@'%';
# Grant:
CREATE USER IF NOT EXISTS 'joe_wildcard'@'%';
GRANT UPDATE ON `util_test`.* TO 'joe_wildcard'@'%';
#...done.
USE `util_test`;
# Exporting data from `util_test`
# Data for table `util_test`.`t1`:
INSERT INTO `util_test`.`t1` VALUES ('01 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('02 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('03 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('04 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('05 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('06 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('07 Test Basic database example');
# Data for table `util_test`.`t2`:
INSERT INTO `util_test`.`t2` VALUES ('11 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('12 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('13 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES (NULL);
# Data for table `util_test`.`t3`:
INSERT INTO `util_test`.`t3` VALUES (1, '14 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (2, '15 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (3, '16 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (4, NULL);
# Data for table `util_test`.`t4`:
INSERT INTO `util_test`.`t4` VALUES (3, 2);
# Data for table `util_test`.`t5`:
INSERT INTO `util_test`.`t5` VALUES (1, 'kitkat', 0.99, 19);
INSERT INTO `util_test`.`t5` VALUES (2, 'M&M', 5.99, 19);
INSERT INTO `util_test`.`t5` VALUES (3, 'milk', 0.67, 5);
INSERT INTO `util_test`.`t5` VALUES (4, 'Dr. Pepper', 0.99, 19);
#...done.
SET FOREIGN_KEY_CHECKS=1;
Test case 2 - export data with no-locks locking
# Source on localhost: ... connected.
SET FOREIGN_KEY_CHECKS=0;
USE `util_test`;
# Exporting data from `util_test`
# Data for table `util_test`.`t1`:
INSERT INTO `util_test`.`t1` VALUES ('01 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('02 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('03 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('04 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('05 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('06 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('07 Test Basic database example');
# Data for table `util_test`.`t2`:
INSERT INTO `util_test`.`t2` VALUES ('11 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('12 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('13 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES (NULL);
# Data for table `util_test`.`t3`:
INSERT INTO `util_test`.`t3` VALUES (1, '14 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (2, '15 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (3, '16 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (4, NULL);
# Data for table `util_test`.`t4`:
INSERT INTO `util_test`.`t4` VALUES (3, 2);
# Data for table `util_test`.`t5`:
INSERT INTO `util_test`.`t5` VALUES (1, 'kitkat', 0.99, 19);
INSERT INTO `util_test`.`t5` VALUES (2, 'M&M', 5.99, 19);
INSERT INTO `util_test`.`t5` VALUES (3, 'milk', 0.67, 5);
INSERT INTO `util_test`.`t5` VALUES (4, 'Dr. Pepper', 0.99, 19);
#...done.
SET FOREIGN_KEY_CHECKS=1;
Test case 3 - export data with lock-all locking
# Source on localhost: ... connected.
SET FOREIGN_KEY_CHECKS=0;
USE `util_test`;
# Exporting data from `util_test`
# Data for table `util_test`.`t1`:
INSERT INTO `util_test`.`t1` VALUES ('01 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('02 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('03 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('04 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('05 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('06 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('07 Test Basic database example');
# Data for table `util_test`.`t2`:
INSERT INTO `util_test`.`t2` VALUES ('11 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('12 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('13 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES (NULL);
# Data for table `util_test`.`t3`:
INSERT INTO `util_test`.`t3` VALUES (1, '14 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (2, '15 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (3, '16 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (4, NULL);
# Data for table `util_test`.`t4`:
INSERT INTO `util_test`.`t4` VALUES (3, 2);
# Data for table `util_test`.`t5`:
INSERT INTO `util_test`.`t5` VALUES (1, 'kitkat', 0.99, 19);
INSERT INTO `util_test`.`t5` VALUES (2, 'M&M', 5.99, 19);
INSERT INTO `util_test`.`t5` VALUES (3, 'milk', 0.67, 5);
INSERT INTO `util_test`.`t5` VALUES (4, 'Dr. Pepper', 0.99, 19);
#...done.
SET FOREIGN_KEY_CHECKS=1;
Test case 4 - export data with snapshot locking
# Source on localhost: ... connected.
SET FOREIGN_KEY_CHECKS=0;
USE `util_test`;
# Exporting data from `util_test`
# Data for table `util_test`.`t1`:
INSERT INTO `util_test`.`t1` VALUES ('01 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('02 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('03 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('04 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('05 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('06 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('07 Test Basic database example');
# Data for table `util_test`.`t2`:
INSERT INTO `util_test`.`t2` VALUES ('11 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('12 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('13 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES (NULL);
# Data for table `util_test`.`t3`:
INSERT INTO `util_test`.`t3` VALUES (1, '14 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (2, '15 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (3, '16 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (4, NULL);
# Data for table `util_test`.`t4`:
INSERT INTO `util_test`.`t4` VALUES (3, 2);
# Data for table `util_test`.`t5`:
INSERT INTO `util_test`.`t5` VALUES (1, 'kitkat', 0.99, 19);
INSERT INTO `util_test`.`t5` VALUES (2, 'M&M', 5.99, 19);
INSERT INTO `util_test`.`t5` VALUES (3, 'milk', 0.67, 5);
INSERT INTO `util_test`.`t5` VALUES (4, 'Dr. Pepper', 0.99, 19);
#...done.
SET FOREIGN_KEY_CHECKS=1;
